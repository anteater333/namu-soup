{"version":3,"file":"static/js/907.55138ae5.chunk.js","mappings":"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","sources":["api/index.js","components/TrendingList.js","utils/random.js","utils/timezone.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst axiosClient = {\r\n  getTrendingList: async () => {\r\n    try {\r\n      const response = await axios.get(API_URL);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`error 발생했음. 개발자에게 연락해주세요.`);\r\n      console.error(error);\r\n      throw error;\r\n    }\r\n  },\r\n  getMemoList: async (keyword) => {\r\n    try {\r\n      const response = await axios.get(\r\n        API_URL + `/${encodeURIComponent(keyword)}`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response.status === 404) {\r\n        return false;\r\n      } else {\r\n        console.error(error);\r\n        throw error;\r\n      }\r\n    }\r\n  },\r\n  writeMemo: async (keyword, uuid, context, slot) => {\r\n    const body = { uuid: uuid ? uuid : \"tmp\", memo: context, slot: slot };\r\n    try {\r\n      await axios.post(API_URL + `/${encodeURIComponent(keyword)}`, body);\r\n\r\n      return [true, \"done\"];\r\n    } catch (error) {\r\n      if (error.response.status === 404) {\r\n        return [false, \"notFound\"];\r\n      } else if (error.response.status === 409) {\r\n        return [false, \"duplicated\"];\r\n      } else if (error.response.status === 410) {\r\n        return [false, \"missed\"];\r\n      } else if (error.response.status === 419) {\r\n        return [false, \"tooLong\"];\r\n      } else if (error.response.status === 429) {\r\n        return [false, \"tooMany\"];\r\n      }\r\n\r\n      console.error(error);\r\n      if (error.response) {\r\n        return [false, \"notDefined\"];\r\n      }\r\n\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default axiosClient;\r\n","import api from \"../api/index\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, ListGroup, ListGroupItem, Placeholder } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getRandomInt, placeholderData } from \"../utils/random\";\r\nimport { UTCStrToKSTStr } from \"../utils/timezone\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nfunction TrendingList() {\r\n  const [trendings, setTrendings] = useState([]);\r\n  const [crawledAt, setCrawledAt] = useState(\"\");\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const refreshList = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await api.getTrendingList();\r\n      setTrendings(result[0]);\r\n      setCrawledAt(UTCStrToKSTStr(result[1]));\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n  }, [refreshList]);\r\n\r\n  const listItem = loading\r\n    ? placeholderData.map((idx) => {\r\n        const phLen = getRandomInt(1, 10);\r\n        return (\r\n          <ListGroupItem key={idx} as=\"li\" className=\"list-item-container\">\r\n            <div className=\"list-item-index\">{idx + 1}</div>\r\n\r\n            <Placeholder animation=\"glow\" xs={8}>\r\n              <Placeholder xs={phLen} bg=\"success\" />\r\n            </Placeholder>\r\n\r\n            <Button className=\"soup-button list-item-button fw-bold\">\r\n              기록\r\n            </Button>\r\n          </ListGroupItem>\r\n        );\r\n      })\r\n    : trendings.map((trending, idx) => {\r\n        return (\r\n          <ListGroupItem\r\n            key={trending.keyword}\r\n            as=\"li\"\r\n            className=\"list-item-container\"\r\n          >\r\n            <div className=\"list-item-index\">{idx + 1}</div>\r\n            <a\r\n              className=\"list-item-text\"\r\n              href={\"https://namu.wiki/w/\" + trending.keyword}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <div className=\"fw-bold\">{trending.keyword}</div>\r\n            </a>\r\n\r\n            <Button\r\n              as={Link}\r\n              to={`/m/${trending.keyword}`}\r\n              className=\"soup-button list-item-button fw-bold\"\r\n            >\r\n              기록\r\n            </Button>\r\n          </ListGroupItem>\r\n        );\r\n      });\r\n\r\n  let errorMessage;\r\n  if (error) {\r\n    errorMessage = (\r\n      <div className=\"error-page\">\r\n        <span className=\"error-message\">서버에 접속할 수 없습니다.</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>숲Soup - 나무위키 인기 검색어</title>\r\n        <meta\r\n          name=\"description\"\r\n          content={`숲, 나무위키 인기 검색어, ${trendings\r\n            .map((t) => t.keyword)\r\n            .join(\", \")}`}\r\n        />\r\n        <meta\r\n          name=\"keywords\"\r\n          content=\"namu, wiki, 숲, 나무위키, 인기, 검색어, 실검, 실시간 검색어, 실시간 인기 검색어\"\r\n        />\r\n        <meta property=\"og:title\" content=\"숲Soup - 나무위키 인기 검색어\" />\r\n      </Helmet>\r\n      <div className=\"list-container\">\r\n        {errorMessage}\r\n        <ListGroup as=\"ol\">{listItem}</ListGroup>\r\n        <div className=\"crawled-at\">기준 시각 : {crawledAt}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TrendingList;\r\n","export function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport const placeholderData = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n","export function UTCStrToKSTStr(UTCStr) {\n  let [YMD, HM, TZ] = [...UTCStr.split(\" \")];\n  HM = HM.split(\":\");\n  HM = `${((parseInt(HM[0]) + 9) % 24).toString().padStart(2, \"0\")}:${HM[1]}`;\n  TZ = \"KST\";\n\n  return [YMD, HM, TZ].join(\" \");\n}\n"],"names":["API_URL","process","axiosClient","getTrendingList","axios","response","data","console","error","getMemoList","keyword","encodeURIComponent","status","writeMemo","uuid","context","slot","body","memo","useState","trendings","setTrendings","crawledAt","setCrawledAt","setError","loading","setLoading","refreshList","useCallback","api","result","UTCStrToKSTStr","useEffect","errorMessage","listItem","placeholderData","idx","phLen","getRandomInt","as","className","animation","xs","bg","map","trending","href","target","rel","Link","to","name","content","t","join","property","min","max","Math","ceil","floor","random","UTCStr","split","YMD","HM","parseInt","toString","padStart"],"sourceRoot":""}